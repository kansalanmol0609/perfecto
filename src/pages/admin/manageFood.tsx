//libs
import Head from 'next/head';
import _range from 'lodash/range';
import {gql, useQuery} from '@apollo/client';
import {useRouter} from 'next/router';
import {useCallback} from 'react';

//components
import {
  Box,
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  Button,
  HStack,
  Heading,
  Stack,
} from '@chakra-ui/react';
import {FullPageLoader} from '@/components/FullPageLoader';
import {FullPageErrorScreen} from '@/components/FullPageErrorScreen';
import FoodItemsGrid from '@/components/FoodItemsGrid';

//icons
import {EditIcon} from '@chakra-ui/icons';

//hocs
import {withAuthentication} from '@/decorators/withAuthentication';

//constants
import {ROUTE_TYPE} from '@/decorators/withAuthentication/withAuthentication';

//types
import {Food} from '@prisma/client';

const READ_FOOD_ITEMS_QUERY = gql`
  query ReadFoodItems {
    readFoodItems {
      id
      name
      description
      pictures
      isVeg
      inStock
      price {
        amount
        currency
        precision
      }
      category
    }
  }
`;

const ManageFoodPageBody = withAuthentication({
  routeType: ROUTE_TYPE.ADMIN,
})(() => {
  const router = useRouter();

  const handleCreateNewFoodItem = useCallback(() => router.push('/admin/createFood'), [router]);

  const {loading, error, data, refetch} = useQuery<{readFoodItems: Array<Food>}>(
    READ_FOOD_ITEMS_QUERY,
  );

  if (loading || !data) {
    return <FullPageLoader />;
  }

  if (error) {
    return <FullPageErrorScreen refetch={refetch} />;
  }

  return (
    <Box py={16} px={4} maxWidth={1100} mx="auto">
      <HStack justifyContent="space-between" mb={8}>
        <Heading fontSize="4xl" fontWeight="extrabold">
          Food Items
        </Heading>

        <Button
          leftIcon={<EditIcon />}
          colorScheme="brand"
          variant="solid"
          onClick={handleCreateNewFoodItem}
        >
          Create New
        </Button>
      </HStack>
      <FoodItemsGrid foodItems={data?.readFoodItems} />
    </Box>
  );
});

function ManageFoodPage() {
  return (
    <>
      <Head>
        <title>Manage Food Items</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box as="main">
        <Box
          height="400px"
          backgroundPosition="center"
          backgroundRepeat="no-repeat"
          backgroundSize="cover"
          backgroundImage="https://preview.colorlib.com/theme/feliciano/images/bg_3.jpg.webp"
          backgroundAttachment="fixed"
          width="full"
          display="flex"
          alignItems="center"
        >
          <Stack
            spacing={0}
            direction="column"
            alignItems="center"
            justifyContent="flex-end"
            height="full"
            width="full"
            backgroundColor="blackAlpha.700"
            pb={8}
          >
            <Box fontSize="4xl" fontWeight="extrabold" color="white">
              Manage Food Items
            </Box>

            <Breadcrumb fontSize="xs" color="white" textTransform="uppercase">
              <BreadcrumbItem>
                <BreadcrumbLink href="/">Home</BreadcrumbLink>
              </BreadcrumbItem>

              <BreadcrumbItem>
                <BreadcrumbLink href="/admin">Admin</BreadcrumbLink>
              </BreadcrumbItem>

              <BreadcrumbItem>
                <BreadcrumbLink href="/admin/manageFood">Manage Food</BreadcrumbLink>
              </BreadcrumbItem>
            </Breadcrumb>
          </Stack>
        </Box>

        <ManageFoodPageBody />
      </Box>
    </>
  );
}

export default ManageFoodPage;
